name: Tests

on:
  pull_request:
  push:
    branches:
      - master

jobs:
  ext-unit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Specify node version
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: ext/package-lock.json

      - name: Install node_modules
        run: cd ext && npm ci

      - name: Run unit tests
        run: cd ext && npm run unit

  ext-integration:
    env:
      TEST_MNEMONIC: ${{ secrets.TEST_MNEMONIC }}
      EXPO_PUBLIC_BREEZ_API_KEY: ${{ secrets.EXPO_PUBLIC_BREEZ_API_KEY }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Specify node version
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: ext/package-lock.json

      - name: Install node_modules
        run: cd ext && npm ci

      - name: Run integration tests
        run: cd ext && npm run integration

  ext-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Specify node version
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: ext/package-lock.json

      - name: Install node_modules
        run: cd ext && npm ci

      - name: Run lint
        run: cd ext && npm run lint

  ext-circular:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Specify node version
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: ext/package-lock.json

      - name: Install node_modules
        run: cd ext && npm ci

      - name: Run circular
        run: cd ext && npm run circular

  ext-e2e:
    env:
      TEST_MNEMONIC: ${{ secrets.TEST_MNEMONIC }}
      EXPO_PUBLIC_BREEZ_API_KEY: ${{ secrets.EXPO_PUBLIC_BREEZ_API_KEY }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Specify node version
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: ext/package-lock.json

      - name: Install node_modules
        run: cd ext && npm ci

      - name: Add Sepolia testnet
        run: cd ext && ./utils/add-sepolia.sh

      - name: Run build
        run: cd ext && NODE_ENV=production npm run build

      - name: Install Playwright
        run: cd ext && npx playwright install

      - name: Install Playwright 2
        run: cd ext && npx playwright install-deps

      - name: Run e2e tests
        run: cd ext && npm run e2e

  ext-commitlint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Specify node version
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: ext/package-lock.json

      - name: Install node_modules
        run: cd ext && npm ci

      - name: Validate current commit (last commit) with commitlint
        if: github.event_name == 'push'
        run: cd ext && npx commitlint --last --verbose

      - name: Validate PR commits with commitlint
        if: github.event_name == 'pull_request'
        run: cd ext && npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

  mobile-unit:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Specify node version
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json

      - name: Install node_modules
        run: cd mobile && npm ci

      - name: Run unit tests
        run: cd mobile && npm run unit

  mobile-integration:
    env:
      TEST_MNEMONIC: ${{ secrets.TEST_MNEMONIC }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Specify node version
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json

      - name: Install node_modules
        run: cd mobile && npm ci

      - name: Run integration tests
        run: cd mobile && npm run integration

  mobile-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout project
        uses: actions/checkout@v4

      - name: Specify node version
        uses: actions/setup-node@v4
        with:
          node-version: 22
          cache: 'npm'
          cache-dependency-path: mobile/package-lock.json

      - name: Install node_modules
        run: cd mobile && npm ci

      - name: Run lint
        run: |
          cd mobile
          # force expo to re-generate typed routes file (.expo/types/router.d.ts)
          npx expo customize tsconfig.json
          ls .expo/types/router.d.ts
          npm run lint
