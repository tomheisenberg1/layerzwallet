appId: com.layerzwallet.mobile
---
- runFlow: subflows/wallet-creation.yml

# run for networks which have unique receive screens: bitcoin, rootstock (evm), ark, liquid (both liquid & lightning)
# all other networks reuse receive screens from those. generic receive address generation for specific wallet types
# should be done in selftest
- evalScript: ${output.networks = ['liquid', 'bitcoin', 'rootstock', 'spark']}
- repeat:
    while:
      true: ${output.networks.length > 0}
    commands:
      # switch to the next network
      - runFlow:
          file: subflows/network-switch.yml
          env:
            NETWORK: ${output.networks.shift()}
      - assertVisible: 'Receive'
      - assertVisible: 'Send'
      - tapOn: 'Receive'
      - extendedWaitUntil:
          notVisible: 'Loading address...'
          timeout: 60000
      # Verify all basic UI components rendered successfully with an actual address.
      - assertVisible:
          id: 'QrContainer' # This will fail if the address was not obtained
      - scroll
      - assertVisible:
          id: 'CopyAddressButton' # expand later with ui feedback
      - assertVisible:
          id: 'ShareButton'
      - runFlow: subflows/back.yml

# for Lightning network we need to enter the amount to generate the invoice
- evalScript: ${output.networks = ['lightning']} # ,'lightningtest'
- repeat:
    while:
      true: ${output.networks.length > 0}
    commands:
      # switch to the next network
      - runFlow:
          file: subflows/network-switch.yml
          env:
            NETWORK: ${output.networks.shift()}
      - assertVisible: 'Receive'
      - assertVisible: 'Send'
      - tapOn: 'Receive'
      - tapOn:
          id: 'ReceiveLightningAmountInput'
      - inputText:
          text: '100000'
      - tapOn:
          id: 'GenerateButton'
      - extendedWaitUntil:
          notVisible: 'Generating...'
          timeout: 60000

      # WTF. Android shows "Allow Android Keyboard(AOSP) to access your contacts?". We need to close it
      - runFlow:
          when:
            visible:
              text: 'Allow Android Keyboard.*'
          commands:
            - tapOn: 'allow'
            - tapOn:
                id: 'GenerateButton'
            - extendedWaitUntil:
                notVisible: 'Generating...'
                timeout: 60000

      # Verify all basic UI components rendered successfully with an actual address.
      - assertVisible:
          id: 'LNQrContainer' # This will fail if the address was not obtained
      - scroll
      - assertVisible:
          id: 'CopyInvoiceButton' # expand later with ui feedback
      - assertVisible:
          id: 'LNShareButton'
      - runFlow: subflows/back.yml
